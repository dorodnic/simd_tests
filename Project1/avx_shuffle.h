#pragma once

#include "core.h"

#include <tmmintrin.h>
#include <immintrin.h>

#define SET_SCATTER_SHUFFLE(G, O, L, S, M) \
template<>\
struct scatter_shuffle<G, O, L>\
{\
    FORCEINLINE static __m256i shuffle() { return S; }\
    FORCEINLINE static __m256i mask() { return M; }\
}

#define SET_GATHER_SHUFFLE(G, O, L, S, M) \
template<>\
struct gather_shuffle<G, O, L>\
{\
    FORCEINLINE static __m256i shuffle() { return S; }\
    FORCEINLINE static __m256i mask() { return M; }\
}

namespace simd
{
    namespace avx
    {
        template<int GAP, int OFFSET, int LINE>
        struct scatter_shuffle {};
        template<int GAP, int OFFSET, int LINE>
        struct gather_shuffle {};

        SET_SCATTER_SHUFFLE(2, 0, 0, _mm256_set_epi32(0, 3, 0, 2, 0, 1, 0, 0), _mm256_set_epi32(0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF));
        SET_GATHER_SHUFFLE(2, 0, 0, _mm256_set_epi32(0, 0, 0, 0, 6, 4, 2, 0), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF));
        SET_SCATTER_SHUFFLE(2, 0, 1, _mm256_set_epi32(0, 7, 0, 6, 0, 5, 0, 4), _mm256_set_epi32(0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF));
        SET_GATHER_SHUFFLE(2, 0, 1, _mm256_set_epi32(6, 4, 2, 0, 0, 0, 0, 0), _mm256_set_epi32(0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00));
        SET_SCATTER_SHUFFLE(2, 1, 0, _mm256_set_epi32(3, 0, 2, 0, 1, 0, 0, 0), _mm256_set_epi32(0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00));
        SET_GATHER_SHUFFLE(2, 1, 0, _mm256_set_epi32(0, 0, 0, 0, 7, 5, 3, 1), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF));
        SET_SCATTER_SHUFFLE(2, 1, 1, _mm256_set_epi32(7, 0, 6, 0, 5, 0, 4, 0), _mm256_set_epi32(0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00));
        SET_GATHER_SHUFFLE(2, 1, 1, _mm256_set_epi32(7, 5, 3, 1, 0, 0, 0, 0), _mm256_set_epi32(0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00));
        SET_SCATTER_SHUFFLE(3, 0, 0, _mm256_set_epi32(0, 2, 0, 0, 1, 0, 0, 0), _mm256_set_epi32(0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF));
        SET_GATHER_SHUFFLE(3, 0, 0, _mm256_set_epi32(0, 0, 0, 0, 0, 6, 3, 0), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF));
        SET_SCATTER_SHUFFLE(3, 0, 1, _mm256_set_epi32(5, 0, 0, 4, 0, 0, 3, 0), _mm256_set_epi32(0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00));
        SET_GATHER_SHUFFLE(3, 0, 1, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 6), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(3, 0, 2, _mm256_set_epi32(0, 0, 7, 0, 0, 6, 0, 0), _mm256_set_epi32(0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00));
        SET_GATHER_SHUFFLE(3, 0, 2, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 6), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(3, 1, 0, _mm256_set_epi32(2, 0, 0, 1, 0, 0, 0, 0), _mm256_set_epi32(0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00));
        SET_GATHER_SHUFFLE(3, 1, 0, _mm256_set_epi32(0, 0, 0, 0, 0, 7, 4, 1), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF));
        SET_SCATTER_SHUFFLE(3, 1, 1, _mm256_set_epi32(0, 0, 4, 0, 0, 3, 0, 0), _mm256_set_epi32(0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00));
        SET_GATHER_SHUFFLE(3, 1, 1, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 7), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(3, 1, 2, _mm256_set_epi32(0, 7, 0, 0, 6, 0, 0, 5), _mm256_set_epi32(0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF));
        SET_GATHER_SHUFFLE(3, 1, 2, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 7), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(3, 2, 0, _mm256_set_epi32(0, 0, 1, 0, 0, 0, 0, 0), _mm256_set_epi32(0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00));
        SET_GATHER_SHUFFLE(3, 2, 0, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 5, 2), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF));
        SET_SCATTER_SHUFFLE(3, 2, 1, _mm256_set_epi32(0, 4, 0, 0, 3, 0, 0, 2), _mm256_set_epi32(0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF));
        SET_GATHER_SHUFFLE(3, 2, 1, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 5), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(3, 2, 2, _mm256_set_epi32(7, 0, 0, 6, 0, 0, 5, 0), _mm256_set_epi32(0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00));
        SET_GATHER_SHUFFLE(3, 2, 2, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 5), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(4, 0, 0, _mm256_set_epi32(0, 0, 0, 1, 0, 0, 0, 0), _mm256_set_epi32(0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF));
        SET_GATHER_SHUFFLE(4, 0, 0, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 4, 0), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF));
        SET_SCATTER_SHUFFLE(4, 0, 1, _mm256_set_epi32(0, 0, 0, 3, 0, 0, 0, 2), _mm256_set_epi32(0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF));
        SET_GATHER_SHUFFLE(4, 0, 1, _mm256_set_epi32(0, 0, 0, 0, 4, 0, 0, 0), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00));
        SET_SCATTER_SHUFFLE(4, 0, 2, _mm256_set_epi32(0, 0, 0, 5, 0, 0, 0, 4), _mm256_set_epi32(0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF));
        SET_GATHER_SHUFFLE(4, 0, 2, _mm256_set_epi32(0, 0, 4, 0, 0, 0, 0, 0), _mm256_set_epi32(0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00));
        SET_SCATTER_SHUFFLE(4, 0, 3, _mm256_set_epi32(0, 0, 0, 7, 0, 0, 0, 6), _mm256_set_epi32(0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF));
        SET_GATHER_SHUFFLE(4, 0, 3, _mm256_set_epi32(4, 0, 0, 0, 0, 0, 0, 0), _mm256_set_epi32(0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
        SET_SCATTER_SHUFFLE(4, 1, 0, _mm256_set_epi32(0, 0, 1, 0, 0, 0, 0, 0), _mm256_set_epi32(0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00));
        SET_GATHER_SHUFFLE(4, 1, 0, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 5, 1), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF));
        SET_SCATTER_SHUFFLE(4, 1, 1, _mm256_set_epi32(0, 0, 3, 0, 0, 0, 2, 0), _mm256_set_epi32(0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00));
        SET_GATHER_SHUFFLE(4, 1, 1, _mm256_set_epi32(0, 0, 0, 0, 5, 1, 0, 0), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00));
        SET_SCATTER_SHUFFLE(4, 1, 2, _mm256_set_epi32(0, 0, 5, 0, 0, 0, 4, 0), _mm256_set_epi32(0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00));
        SET_GATHER_SHUFFLE(4, 1, 2, _mm256_set_epi32(0, 0, 5, 1, 0, 0, 0, 0), _mm256_set_epi32(0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00));
        SET_SCATTER_SHUFFLE(4, 1, 3, _mm256_set_epi32(0, 0, 7, 0, 0, 0, 6, 0), _mm256_set_epi32(0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00));
        SET_GATHER_SHUFFLE(4, 1, 3, _mm256_set_epi32(5, 1, 0, 0, 0, 0, 0, 0), _mm256_set_epi32(0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
        SET_SCATTER_SHUFFLE(4, 2, 0, _mm256_set_epi32(0, 1, 0, 0, 0, 0, 0, 0), _mm256_set_epi32(0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00));
        SET_GATHER_SHUFFLE(4, 2, 0, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 6, 2), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF));
        SET_SCATTER_SHUFFLE(4, 2, 1, _mm256_set_epi32(0, 3, 0, 0, 0, 2, 0, 0), _mm256_set_epi32(0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00));
        SET_GATHER_SHUFFLE(4, 2, 1, _mm256_set_epi32(0, 0, 0, 0, 6, 2, 0, 0), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00));
        SET_SCATTER_SHUFFLE(4, 2, 2, _mm256_set_epi32(0, 5, 0, 0, 0, 4, 0, 0), _mm256_set_epi32(0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00));
        SET_GATHER_SHUFFLE(4, 2, 2, _mm256_set_epi32(0, 0, 6, 2, 0, 0, 0, 0), _mm256_set_epi32(0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00));
        SET_SCATTER_SHUFFLE(4, 2, 3, _mm256_set_epi32(0, 7, 0, 0, 0, 6, 0, 0), _mm256_set_epi32(0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00));
        SET_GATHER_SHUFFLE(4, 2, 3, _mm256_set_epi32(6, 2, 0, 0, 0, 0, 0, 0), _mm256_set_epi32(0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
        SET_SCATTER_SHUFFLE(4, 3, 0, _mm256_set_epi32(1, 0, 0, 0, 0, 0, 0, 0), _mm256_set_epi32(0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00));
        SET_GATHER_SHUFFLE(4, 3, 0, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 7, 3), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF));
        SET_SCATTER_SHUFFLE(4, 3, 1, _mm256_set_epi32(3, 0, 0, 0, 2, 0, 0, 0), _mm256_set_epi32(0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00));
        SET_GATHER_SHUFFLE(4, 3, 1, _mm256_set_epi32(0, 0, 0, 0, 7, 3, 0, 0), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00));
        SET_SCATTER_SHUFFLE(4, 3, 2, _mm256_set_epi32(5, 0, 0, 0, 4, 0, 0, 0), _mm256_set_epi32(0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00));
        SET_GATHER_SHUFFLE(4, 3, 2, _mm256_set_epi32(0, 0, 7, 3, 0, 0, 0, 0), _mm256_set_epi32(0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00));
        SET_SCATTER_SHUFFLE(4, 3, 3, _mm256_set_epi32(7, 0, 0, 0, 6, 0, 0, 0), _mm256_set_epi32(0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00));
        SET_GATHER_SHUFFLE(4, 3, 3, _mm256_set_epi32(7, 3, 0, 0, 0, 0, 0, 0), _mm256_set_epi32(0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
        SET_SCATTER_SHUFFLE(5, 0, 0, _mm256_set_epi32(0, 0, 1, 0, 0, 0, 0, 0), _mm256_set_epi32(0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_GATHER_SHUFFLE(5, 0, 0, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 5, 0), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF));
        SET_SCATTER_SHUFFLE(5, 0, 1, _mm256_set_epi32(3, 0, 0, 0, 0, 2, 0, 0), _mm256_set_epi32(0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00));
        SET_GATHER_SHUFFLE(5, 0, 1, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 5), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 0, 2, _mm256_set_epi32(0, 0, 0, 4, 0, 0, 0, 0), _mm256_set_epi32(0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00));
        SET_GATHER_SHUFFLE(5, 0, 2, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 5), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 0, 3, _mm256_set_epi32(0, 6, 0, 0, 0, 0, 5, 0), _mm256_set_epi32(0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00));
        SET_GATHER_SHUFFLE(5, 0, 3, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 5), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 0, 4, _mm256_set_epi32(0, 0, 0, 0, 7, 0, 0, 0), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00));
        SET_GATHER_SHUFFLE(5, 0, 4, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 5), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 1, 0, _mm256_set_epi32(0, 1, 0, 0, 0, 0, 0, 0), _mm256_set_epi32(0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00));
        SET_GATHER_SHUFFLE(5, 1, 0, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 6, 1), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF));
        SET_SCATTER_SHUFFLE(5, 1, 1, _mm256_set_epi32(0, 0, 0, 0, 2, 0, 0, 0), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00));
        SET_GATHER_SHUFFLE(5, 1, 1, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 6), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 1, 2, _mm256_set_epi32(0, 0, 4, 0, 0, 0, 0, 3), _mm256_set_epi32(0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_GATHER_SHUFFLE(5, 1, 2, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 6), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 1, 3, _mm256_set_epi32(6, 0, 0, 0, 0, 5, 0, 0), _mm256_set_epi32(0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00));
        SET_GATHER_SHUFFLE(5, 1, 3, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 6), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 1, 4, _mm256_set_epi32(0, 0, 0, 7, 0, 0, 0, 0), _mm256_set_epi32(0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00));
        SET_GATHER_SHUFFLE(5, 1, 4, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 6), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 2, 0, _mm256_set_epi32(1, 0, 0, 0, 0, 0, 0, 0), _mm256_set_epi32(0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00));
        SET_GATHER_SHUFFLE(5, 2, 0, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 7, 2), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF));
        SET_SCATTER_SHUFFLE(5, 2, 1, _mm256_set_epi32(0, 0, 0, 2, 0, 0, 0, 0), _mm256_set_epi32(0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00));
        SET_GATHER_SHUFFLE(5, 2, 1, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 7), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 2, 2, _mm256_set_epi32(0, 4, 0, 0, 0, 0, 3, 0), _mm256_set_epi32(0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00));
        SET_GATHER_SHUFFLE(5, 2, 2, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 7), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 2, 3, _mm256_set_epi32(0, 0, 0, 0, 5, 0, 0, 0), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00));
        SET_GATHER_SHUFFLE(5, 2, 3, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 7), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 2, 4, _mm256_set_epi32(0, 0, 7, 0, 0, 0, 0, 6), _mm256_set_epi32(0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_GATHER_SHUFFLE(5, 2, 4, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 7), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 3, 0, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 0), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00));
        SET_GATHER_SHUFFLE(5, 3, 0, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 3), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 3, 1, _mm256_set_epi32(0, 0, 2, 0, 0, 0, 0, 1), _mm256_set_epi32(0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_GATHER_SHUFFLE(5, 3, 1, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 3), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 3, 2, _mm256_set_epi32(4, 0, 0, 0, 0, 3, 0, 0), _mm256_set_epi32(0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00));
        SET_GATHER_SHUFFLE(5, 3, 2, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 3), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 3, 3, _mm256_set_epi32(0, 0, 0, 5, 0, 0, 0, 0), _mm256_set_epi32(0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00));
        SET_GATHER_SHUFFLE(5, 3, 3, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 3), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 3, 4, _mm256_set_epi32(0, 7, 0, 0, 0, 0, 6, 0), _mm256_set_epi32(0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00));
        SET_GATHER_SHUFFLE(5, 3, 4, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 3), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 4, 0, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 0), _mm256_set_epi32(0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00));
        SET_GATHER_SHUFFLE(5, 4, 0, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 4), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 4, 1, _mm256_set_epi32(0, 2, 0, 0, 0, 0, 1, 0), _mm256_set_epi32(0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00));
        SET_GATHER_SHUFFLE(5, 4, 1, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 4), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 4, 2, _mm256_set_epi32(0, 0, 0, 0, 3, 0, 0, 0), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00));
        SET_GATHER_SHUFFLE(5, 4, 2, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 4), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 4, 3, _mm256_set_epi32(0, 0, 5, 0, 0, 0, 0, 4), _mm256_set_epi32(0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_GATHER_SHUFFLE(5, 4, 3, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 4), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
        SET_SCATTER_SHUFFLE(5, 4, 4, _mm256_set_epi32(7, 0, 0, 0, 0, 6, 0, 0), _mm256_set_epi32(0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00));
        SET_GATHER_SHUFFLE(5, 4, 4, _mm256_set_epi32(0, 0, 0, 0, 0, 0, 0, 4), _mm256_set_epi32(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
    }
}

#undef SET_SCATTER_SHUFFLE